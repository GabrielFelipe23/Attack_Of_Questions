/* Assim como todos os jogos, possui um chat, e nosso o jogo o chat tem uma grande
 * importância, tendo em vista que é apena uma parte visual.
 * 
 * 
 */

package br.com.Attack.formularios;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import javax.swing.JOptionPane;

/**
 *
 * @author Konex Soluções Tecnológicas.
 */
public class Chat extends javax.swing.JFrame {
    

    //-Socket usado para a ligação
    //-Streams de leitura e escrita. A de leitura é usada para receber os dados do
    // servidor, enviados pelos outros usuário. A de escrita para enviar os dados
    // para o servidor.
    //-Apenas para que o utilizador não altere o nick a meio da conversa
    
    private Socket socket;
    private DataInputStream din;
    private DataOutputStream dout;
    private String nick;

    //Criação do CHAT
    public Chat() {
        initComponents();
    }

    public void ligar() {
        try {
            nick = jtfNick.getText().trim();
            jtaMensagens.append("<-cliente->: A ligar...\n");
            String host = jtfEndereco.getText().trim();
            int port = Integer.parseInt(jffPorto.getText().trim());

            //criar o socket
            socket = new Socket(host, port);
            //como não ocorreu uma excepção temos um socket aberto
            jtaMensagens.append("<-cliente->: Ligação estabelecida...\n");

            //Vamos obter as streams de comunicação fornecidas pelo socket
            din = new DataInputStream(socket.getInputStream());
            dout = new DataOutputStream(socket.getOutputStream());

            //e iniciar a thread que vai estar constantemente à espera de novas
            //mensages. Se não usassemos uma thread, não conseguiamos receber
            //mensagens enquanto estivessemos a escrever e toda a parte gráfica
            //ficaria bloqueada.
            new Thread(new Runnable() {
                //estamos a usar uma classe anónima...

                public void run() {
                    try {
                        while (true) {
                            //sequencialmente, ler as mensagens uma a uma e acrescentar ao
                            //texto que já recebemos
                            //para o utilizador ver
                            jtaMensagens.append(din.readUTF() + "\n");
                        }
                    } catch (IOException ex) {
                        jtaMensagens.append("<-cliente->: " + ex.getMessage());
                    }
                }
            }).start();

        } catch (IOException ex) {
            jtaMensagens.append("<-cliente->: " + ex.getMessage());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpLigacao = new javax.swing.JPanel();
        jlblEndereco = new javax.swing.JLabel();
        jtfEndereco = new javax.swing.JTextField();
        jlblPorto = new javax.swing.JLabel();
        jffPorto = new javax.swing.JFormattedTextField();
        jbtnLigar = new javax.swing.JButton();
        jlblNick = new javax.swing.JLabel();
        jtfNick = new javax.swing.JTextField();
        jpMensagens = new javax.swing.JPanel();
        jscpScrollMensagens = new javax.swing.JScrollPane();
        jtaMensagens = new javax.swing.JTextArea();
        jtfMensagem = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Chat");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpLigacao.setBorder(javax.swing.BorderFactory.createTitledBorder("Ligação"));

        jlblEndereco.setText("IP:");

        jlblPorto.setText("Porta:");

        jffPorto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jbtnLigar.setText("Entrar");
        jbtnLigar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLigarActionPerformed(evt);
            }
        });

        jlblNick.setText("Nome de Usúario:");

        org.jdesktop.layout.GroupLayout jpLigacaoLayout = new org.jdesktop.layout.GroupLayout(jpLigacao);
        jpLigacao.setLayout(jpLigacaoLayout);
        jpLigacaoLayout.setHorizontalGroup(
            jpLigacaoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jpLigacaoLayout.createSequentialGroup()
                .addContainerGap()
                .add(jlblNick)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jtfNick, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jlblEndereco)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jtfEndereco, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jlblPorto)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jffPorto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jbtnLigar))
        );
        jpLigacaoLayout.setVerticalGroup(
            jpLigacaoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpLigacaoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jbtnLigar)
                .add(jffPorto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jlblPorto)
                .add(jtfEndereco, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jlblEndereco)
                .add(jlblNick)
                .add(jtfNick, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jpMensagens.setBorder(javax.swing.BorderFactory.createTitledBorder("Mensagens"));

        jtaMensagens.setColumns(20);
        jtaMensagens.setRows(5);
        jscpScrollMensagens.setViewportView(jtaMensagens);

        org.jdesktop.layout.GroupLayout jpMensagensLayout = new org.jdesktop.layout.GroupLayout(jpMensagens);
        jpMensagens.setLayout(jpMensagensLayout);
        jpMensagensLayout.setHorizontalGroup(
            jpMensagensLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpMensagensLayout.createSequentialGroup()
                .addContainerGap()
                .add(jscpScrollMensagens)
                .addContainerGap())
        );
        jpMensagensLayout.setVerticalGroup(
            jpMensagensLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jpMensagensLayout.createSequentialGroup()
                .addContainerGap()
                .add(jscpScrollMensagens, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtfMensagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfMensagemActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jtfMensagem)
                .addContainerGap())
            .add(jpLigacao, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jpMensagens, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jpLigacao, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jpMensagens, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jtfMensagem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtfMensagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfMensagemActionPerformed
        try {
            //enviar a mensagem para o servidor.
            //anexamos o nickname deste utilizador apenas para identificação
            dout.writeUTF("<" + nick + ">: " + jtfMensagem.getText().trim());
            jtfMensagem.setText("");
        } catch (IOException ex) {
            jtaMensagens.append("<-cliente->: " + ex.getMessage());
        }
    }//GEN-LAST:event_jtfMensagemActionPerformed

    private void jbtnLigarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLigarActionPerformed
        if (jtfNick.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nick não pode ser vazio.", "Nick vazio...", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (jtfEndereco.getText().trim().isEmpty()) {
            jtfEndereco.setText("localhost");
        }
        if (jffPorto.getText().trim().isEmpty()) {
            jffPorto.setText("5000");
        }

        ligar();
    }//GEN-LAST:event_jbtnLigarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (socket != null) {
            try {
                socket.close();
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Chat().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbtnLigar;
    private javax.swing.JFormattedTextField jffPorto;
    private javax.swing.JLabel jlblEndereco;
    private javax.swing.JLabel jlblNick;
    private javax.swing.JLabel jlblPorto;
    private javax.swing.JPanel jpLigacao;
    private javax.swing.JPanel jpMensagens;
    private javax.swing.JScrollPane jscpScrollMensagens;
    private javax.swing.JTextArea jtaMensagens;
    private javax.swing.JTextField jtfEndereco;
    private javax.swing.JTextField jtfMensagem;
    private javax.swing.JTextField jtfNick;
    // End of variables declaration//GEN-END:variables
}
